class Node:
    def __init__(self,data):
        self.data=data
        self.next=None

class stack:
    def __init__(self):
        self.head=None
    def is_empty(self):
        if self.head is None:
            return True
        else:
            return False
    def push(self,data):
        new_node=Node(data)
        new_node.next=self.head
        self.head=new_node
    def pop(self):
        if self.is_empty():
            return None
        else:
            ram=self.head
            self.head.next=self.head
            return ram.data
    def insert(self,data,index):
        if self.is_empty():
            return None
        elif self.head.data==data:
                return self.head
        else:
            current=self.head
            prev=None
            count=0
            while current and count<index:
                current=current.next
                prev=current
                count+=1
                if count==index:
                    new_node=Node(data)
                    prev.next=new_node
                    new_node.next=current

    def peek(self):
        if self.is_empty():
            return None
        else:
            return self.head.data
    def remove(self,index):
        if self.is_empty():
            return None
        elif index==0:
            return None
        else:
            current=self.head
            prev=None
            count=0
            while current and count<index:
                current=current.next
                prev=current
                count+=1
                if count==index and current:
                    prev.next=current.next.next



madhu=stack()
madhu.push(10)
madhu.push(20)
madhu.push(30)
madhu.push(40)
madhu.push(50)
madhu.insert(23,1)
madhu.remove(2)
print(madhu.pop())
print(madhu.pop())
print(madhu.peek())
